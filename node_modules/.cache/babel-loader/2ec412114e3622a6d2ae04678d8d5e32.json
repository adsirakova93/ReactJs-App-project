{"ast":null,"code":"import * as redux from \"redux\";\nimport { cartReducer } from \"./cartReducer\";\nimport { userReducer } from \"./userReducer\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nimport { searchReducer } from \"./searchReducer\";\nconst persistConfig = {\n  key: 'root',\n  storage,\n  transforms: [encryptTransform({\n    secretKey: 'mayuB!@dE',\n    onError: function (error) {\n      console.log(error);\n    }\n  })]\n};\nconst enhancers = redux.compose(window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nconst rootReducer = redux.combineReducers({\n  cart: cartReducer,\n  user: userReducer,\n  search: searchReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = redux.createStore(persistedReducer, enhancers);\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["C:/Users/adsir/OneDrive/Desktop/E-store/src/redux/store.js"],"names":["redux","cartReducer","userReducer","persistStore","persistReducer","storage","encryptTransform","searchReducer","persistConfig","key","transforms","secretKey","onError","error","console","log","enhancers","compose","window","__REDUX_DEVTOOLS_EXTENSION__","rootReducer","combineReducers","cart","user","search","persistedReducer","store","createStore","persistor"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACC,SAASC,gBAAT,QAAiC,iCAAjC;AACD,SAASC,aAAT,QAA8B,iBAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBJ,EAAAA,OAFkB;AAGlBK,EAAAA,UAAU,EAAE,CACRJ,gBAAgB,CAAC;AACfK,IAAAA,SAAS,EAAE,WADI;AAEfC,IAAAA,OAAO,EAAE,UAAUC,KAAV,EAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAJc,GAAD,CADR;AAHM,CAAtB;AAaA,MAAMG,SAAS,GAAGhB,KAAK,CAACiB,OAAN,CACdC,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EADzB,CAAlB;AAIA,MAAMC,WAAW,GAACpB,KAAK,CAACqB,eAAN,CAAsB;AACpCC,EAAAA,IAAI,EAACrB,WAD+B;AAEpCsB,EAAAA,IAAI,EAACrB,WAF+B;AAGpCsB,EAAAA,MAAM,EAACjB;AAH6B,CAAtB,CAAlB;AAOA,MAAMkB,gBAAgB,GAAGrB,cAAc,CAACI,aAAD,EAAgBY,WAAhB,CAAvC;AAEC,OAAO,MAAMM,KAAK,GAAC1B,KAAK,CAAC2B,WAAN,CAChBF,gBADgB,EAEhBT,SAFgB,CAAZ;AAIJ,OAAQ,IAAIY,SAAS,GAAGzB,YAAY,CAACuB,KAAD,CAA5B","sourcesContent":["import * as redux from \"redux\";\nimport { cartReducer } from \"./cartReducer\";\nimport { userReducer } from \"./userReducer\";\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' \n import { encryptTransform } from 'redux-persist-transform-encrypt';\nimport { searchReducer } from \"./searchReducer\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    transforms: [\n        encryptTransform({\n          secretKey: 'mayuB!@dE',\n          onError: function (error) {\n            console.log(error)\n          },\n        }),\n      ]\n  }\n\nconst enhancers = redux.compose(\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    );\n\nconst rootReducer=redux.combineReducers({\n    cart:cartReducer,\n    user:userReducer,\n    search:searchReducer\n  \n})\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\n export const store=redux.createStore(\n    persistedReducer,\n    enhancers)\n\n    export  let persistor = persistStore(store);"]},"metadata":{},"sourceType":"module"}